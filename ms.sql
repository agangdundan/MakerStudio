-- MySQL Script generated by MySQL Workbench
-- 2017年11月20日 星期一 15时57分52秒
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ms
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ms
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ms` DEFAULT CHARACTER SET utf8 ;
USE `ms` ;

-- -----------------------------------------------------
-- Table `ms`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `username` VARCHAR(16) NOT NULL COMMENT '用户名',
  `email` VARCHAR(255) NULL COMMENT '邮箱',
  `password` VARCHAR(32) NOT NULL COMMENT '密码',
  `header` VARCHAR(255) NULL COMMENT '头像',
  `signature` VARCHAR(255) NULL COMMENT '个性签名',
  `create_time` MEDIUMTEXT NULL COMMENT '创建日期',
  `sex` INT NULL COMMENT '性别 0代表男 1代表女 2代表保密',
  `salt` VARCHAR(45) NULL COMMENT '盐值',
  `last_time` MEDIUMTEXT NULL COMMENT '上一次登录时间',
  `creater_id` INT NULL COMMENT '创建者id',
  `creater_name` VARCHAR(45) NULL COMMENT '创建人名字',
  `phone` VARCHAR(11) NULL COMMENT '联系电话',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
COMMENT = '用户表';


-- -----------------------------------------------------
-- Table `ms`.`usergroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`usergroup` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `group_name` VARCHAR(45) NULL COMMENT '用户组名称',
  `group_info` VARCHAR(45) NULL COMMENT '用户组描述信息',
  `create_time` MEDIUMTEXT NULL COMMENT '修改日期',
  `creater_id` INT NULL COMMENT '创建者id（映射到user表）',
  `creater_name` VARCHAR(45) NULL COMMENT '创建者的名字',
  PRIMARY KEY (`id`),
  INDEX `fk_usergroup_creater_id_idx` (`creater_id` ASC),
  CONSTRAINT `fk_usergroup_creater_id`
    FOREIGN KEY (`creater_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = '用户组表';


-- -----------------------------------------------------
-- Table `ms`.`groupmanager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`groupmanager` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id\n',
  `user_id` INT NULL COMMENT '用户id（映射到用户表）',
  `username` VARCHAR(45) NULL COMMENT '用户名',
  `user_group_id` INT NULL COMMENT '用户所属的用户组id（映射到用户组表）',
  `modify_user_id` INT NULL COMMENT '修改人id（映射到用户表）',
  `modify_username` VARCHAR(45) NULL COMMENT '修改人名称',
  `create_time` VARCHAR(45) NULL COMMENT '修改日期',
  PRIMARY KEY (`id`),
  INDEX `fk_groupmanager_user_id_idx` (`user_id` ASC),
  INDEX `fk_groupmanager_user_group_id_idx` (`user_group_id` ASC),
  INDEX `fk_groupmanager_modify_user_id_idx` (`modify_user_id` ASC),
  CONSTRAINT `fk_groupmanager_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_groupmanager_user_group_id`
    FOREIGN KEY (`user_group_id`)
    REFERENCES `ms`.`usergroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_groupmanager_modify_user_id`
    FOREIGN KEY (`modify_user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '用户-用户组映射表';


-- -----------------------------------------------------
-- Table `ms`.`actioncolumn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`actioncolumn` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `action_column_name` VARCHAR(45) NULL COMMENT '分栏名称',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '动作分栏表';


-- -----------------------------------------------------
-- Table `ms`.`action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`action` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `action_column_id` INT NULL COMMENT '动作分栏号（映射到action_column表）',
  `action` VARCHAR(45) NULL COMMENT '权限操作字符串',
  `visiable` INT NULL COMMENT '可见性 0可见 1不可见',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `action_UNIQUE` (`action` ASC),
  INDEX `fk_action_column_id_idx` (`action_column_id` ASC),
  CONSTRAINT `fk_action_column_id`
    FOREIGN KEY (`action_column_id`)
    REFERENCES `ms`.`actioncolumn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '权限表';


-- -----------------------------------------------------
-- Table `ms`.`actiongroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`actiongroup` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `action` VARCHAR(45) NULL COMMENT '权限操作字符串（映射到权限表）',
  `user_group_id` INT NULL COMMENT '用户组id（映射到用户组表）',
  `user_id` INT NULL COMMENT '用户id（映射到用户表）',
  `create_time` MEDIUMTEXT NULL COMMENT '创建日期',
  `creater_name` VARCHAR(45) NULL COMMENT '创建者姓名',
  PRIMARY KEY (`id`),
  INDEX `fk_actiongroup_action_idx` (`action` ASC),
  INDEX `fk_actiongroup_user_group_id_idx` (`user_group_id` ASC),
  INDEX `fk_actiongroup_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_actiongroup_action`
    FOREIGN KEY (`action`)
    REFERENCES `ms`.`action` (`action`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actiongroup_user_group_id`
    FOREIGN KEY (`user_group_id`)
    REFERENCES `ms`.`usergroup` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actiongroup_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '权限-用户组映射表';


-- -----------------------------------------------------
-- Table `ms`.`book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`book` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `book_name` VARCHAR(45) NULL COMMENT '书名',
  `image` VARCHAR(255) NULL COMMENT '封面',
  `status` INT NULL COMMENT '图书状态 0 正常 1 借走',
  `author` VARCHAR(45) NULL COMMENT '作者',
  `publish` VARCHAR(45) NULL COMMENT '出版社',
  `admin_id` INT NULL COMMENT '管理员id（映射到用户表）',
  `admin_name` VARCHAR(45) NULL COMMENT '管理员名字',
  `create_time` MEDIUMTEXT NULL COMMENT '上架日期',
  `category` VARCHAR(45) NULL COMMENT '所属类目',
  PRIMARY KEY (`id`),
  INDEX `fk_book_admin_id_idx` (`admin_id` ASC),
  CONSTRAINT `fk_book_admin_id`
    FOREIGN KEY (`admin_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '图书信息表';


-- -----------------------------------------------------
-- Table `ms`.`bookusedinfo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`bookusedinfo` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `user_id` INT NULL COMMENT '借书者id（映射到用户表）',
  `username` VARCHAR(45) NULL COMMENT '借书者姓名',
  `book_id` INT NULL COMMENT '图书id（映射到图书表）',
  `book_name` VARCHAR(45) NULL COMMENT '书名',
  `borrow_time` MEDIUMTEXT NULL COMMENT '借书时间',
  `return_time` MEDIUMTEXT NULL COMMENT '还书时间',
  `admin_id` INT NULL COMMENT '管理员id（映射到用户表）',
  `admin_name` VARCHAR(45) NULL COMMENT '管理员姓名',
  PRIMARY KEY (`id`),
  INDEX `fk_bookusedinfo_user_id_idx` (`user_id` ASC),
  INDEX `fk_bookusedinfo_admin_id_idx` (`admin_id` ASC),
  INDEX `fk_bookusedinfo_book_id_idx` (`book_id` ASC),
  CONSTRAINT `fk_bookusedinfo_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bookusedinfo_admin_id`
    FOREIGN KEY (`admin_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bookusedinfo_book_id`
    FOREIGN KEY (`book_id`)
    REFERENCES `ms`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '图书借阅记录表';


-- -----------------------------------------------------
-- Table `ms`.`learningplancolumn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`learningplancolumn` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `learningplancolumn_name` VARCHAR(45) NULL COMMENT '学习计划表分栏名称',
  `learningplancolumn_desc` VARCHAR(255) NULL COMMENT '学习计划表分栏描述',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '学习计划表分栏表';


-- -----------------------------------------------------
-- Table `ms`.`learningplanform`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`learningplanform` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `user_id` INT NULL COMMENT '计划表拥有者id（映射到用户表）',
  `status` INT NULL DEFAULT 0 COMMENT '计划表状态 0 未批阅 1 已批阅',
  `isshare` INT NULL DEFAULT 0 COMMENT '是否分享 0 不分享 1分享',
  PRIMARY KEY (`id`),
  INDEX `fk_learningplanform_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_learningplanform_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '学习计划表模板表';


-- -----------------------------------------------------
-- Table `ms`.`learningplancolumnmanager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`learningplancolumnmanager` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `learningplanform_id` INT NULL COMMENT '学习计划表id（映射到学习计划表）',
  `learningplancolumn_id` INT NULL COMMENT '学习计划表列名id（映射到学习计划列名表）',
  `learningplancolumn_content` TEXT NULL COMMENT '学习计划列的内容',
  PRIMARY KEY (`id`),
  INDEX `fk_learningplancolumnmanager_form_id_idx` (`learningplanform_id` ASC),
  INDEX `fk_learningplancolumnmanager_column_id_idx` (`learningplancolumn_id` ASC),
  CONSTRAINT `fk_learningplancolumnmanager_form_id`
    FOREIGN KEY (`learningplanform_id`)
    REFERENCES `ms`.`learningplanform` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_learningplancolumnmanager_column_id`
    FOREIGN KEY (`learningplancolumn_id`)
    REFERENCES `ms`.`learningplancolumn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '学习计划表-学习计划列名表 映射表';


-- -----------------------------------------------------
-- Table `ms`.`upload`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`upload` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `filename` VARCHAR(255) NULL COMMENT '上传的文件名',
  `image` VARCHAR(255) NULL COMMENT '文件图片',
  `contenttype` VARCHAR(45) NULL COMMENT '文件类型',
  `url` VARCHAR(255) NULL COMMENT '网络地址',
  `localpath` VARCHAR(255) NULL COMMENT '本地服务器地址',
  `downloadtime` INT NULL DEFAULT 0 COMMENT '下载次数',
  `upload_user_id` INT NULL COMMENT '上传者id（映射到用户表）',
  `upload_username` VARCHAR(45) NULL COMMENT '上传者姓名',
  `create_time` MEDIUMTEXT NULL COMMENT '上传时间',
  `visiable` INT NULL DEFAULT 0 COMMENT '文件可见性 0 可见 1 不可见',
  PRIMARY KEY (`id`),
  INDEX `fk_upload_user_id_idx` (`upload_user_id` ASC),
  CONSTRAINT `fk_upload_user_id`
    FOREIGN KEY (`upload_user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '上传文件信息表';


-- -----------------------------------------------------
-- Table `ms`.`meetingrecord`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`meetingrecord` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `recorder_id` INT NULL COMMENT '会议记录人（映射到用户表）',
  `recorder_username` VARCHAR(45) NULL COMMENT '会议记录人姓名',
  `meeting_title` VARCHAR(45) NULL COMMENT '会议主题',
  `meeting_member` VARCHAR(255) NULL COMMENT '会议成员',
  `meeting_content` TEXT NULL COMMENT '会议记录',
  `create_time` MEDIUMTEXT NULL COMMENT '会议时间',
  PRIMARY KEY (`id`),
  INDEX `fk_meetingrecord_recorder_id_idx` (`recorder_id` ASC),
  CONSTRAINT `fk_meetingrecord_recorder_id`
    FOREIGN KEY (`recorder_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '会议记录表';


-- -----------------------------------------------------
-- Table `ms`.`systemmessage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`systemmessage` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `admin_id` INT NULL COMMENT '管理员id（映射到用户表）',
  `admin_name` VARCHAR(45) NULL COMMENT '管理员姓名',
  `message` TEXT NULL COMMENT '消息内容',
  `create_time` MEDIUMTEXT NULL COMMENT '发布时间',
  `status` INT NULL COMMENT '消息状态 0 未发送 1 已发送',
  PRIMARY KEY (`id`),
  INDEX `fk_systemmessage_admin_id_idx` (`admin_id` ASC),
  CONSTRAINT `fk_systemmessage_admin_id`
    FOREIGN KEY (`admin_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '系统通知/公告';


-- -----------------------------------------------------
-- Table `ms`.`mission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`mission` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `creater_id` INT NULL COMMENT '发布任务者id（映射到用户表）',
  `admin_name` VARCHAR(45) NULL COMMENT '发布任务人姓名',
  `title` VARCHAR(45) NULL COMMENT '任务标题',
  `content` TEXT NULL COMMENT '任务内容',
  `create_time` VARCHAR(45) NULL COMMENT '创建时间',
  `status` INT NULL DEFAULT 0 COMMENT '任务状态 0 进行中 1 已完成',
  PRIMARY KEY (`id`),
  INDEX `fk_mission_creater_id_idx` (`creater_id` ASC),
  CONSTRAINT `fk_mission_creater_id`
    FOREIGN KEY (`creater_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '任务工作表';


-- -----------------------------------------------------
-- Table `ms`.`missionmanager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ms`.`missionmanager` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '自增长id',
  `mission_id` INT NULL COMMENT '工作任务id（映射到mission表）',
  `mission_title` VARCHAR(45) NULL COMMENT '任务标题',
  `user_id` INT NULL COMMENT '成员id（映射到用户表）',
  `username` VARCHAR(45) NULL COMMENT '成员名',
  PRIMARY KEY (`id`),
  INDEX `fk_missionmanager_mission_id_idx` (`mission_id` ASC),
  INDEX `fk_missionmanager_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_missionmanager_mission_id`
    FOREIGN KEY (`mission_id`)
    REFERENCES `ms`.`mission` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_missionmanager_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `ms`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
